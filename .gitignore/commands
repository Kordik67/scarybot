//8ball command (8ball.js file)
const Discord = require('discord.js');

var fortunes = [
    "yes",
    "no",
    "maybe",
    "dont know, try again"
];


exports.run = async (bot, message, args) => {

if(!args[0]){
  return message.channel.send(":x: " + "| Please Enter A Question You Would Like Answered")
}
if (args[0]) message.channel.send(fortunes[Math.floor(Math.random() * fortunes.length)]);
else message.channel.send(":x: " + "| I Wasnt Able To Read That :(");
}

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: [],
  permLevel: 0
};

exports.help = {
  name: '8ball',
  description: 'Ask a question to the bot.',
  usage: '8ball <question>'
};

//addRole command (addrole.js file)
const Discord = module.require('discord.js');
const ms = require('ms');

module.exports.run = async (bot, message, args) => {

  if(message.member.hasPermission("ADMINISTRATOR")) {
            let member2 = message.mentions.members.first();
            if(!member2) return message.reply(":x: " + "| You need to mention a user/member!");

            let muteRole2 = message.mentions.roles.first();
            if(!muteRole2) return message.reply(":x: " + `| There is no such role!`);
            
            let time2 = args[2];
            if(!time2) {
              member2.addRole(muteRole2.id);
              message.channel.send(member2 + ` you have been given the permanent role: ` + muteRole2.name);
            }else {
              member2.addRole(muteRole2.id);
              message.channel.send(member2 + ` you have been given the role: ` + muteRole2.name + ` for: ${ms(ms(time2), {long: true})}`);

              setTimeout(function(){
                member2.removeRole(muteRole2.id);
                message.channel.send(member2 + ` you role has been taken off of you your glory lasted: ${ms(ms(time2), {long: true})}`)

              }, ms(time2));

              };
              }else {
                return message.reply(":x: " + "| You need to have the \"ADMINISTRATOR\" Permission")
              };
};

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: [],
  permLevel: 2
};

exports.help = {
  name: 'addrole',
  description: 'add a role for a wanted time.',
  usage: 'addrole <user> <role> [time]'
};

//ascii command (ascii.js file)
const ascii = require('ascii-art');

exports.run = (client, message, args, ops) => {
	ascii.font(args.join(' '), 'Doom', function(rendered) {
		rendered = rendered.trimRight();

		if(rendered.length > 2000) return message.channnel.send('Sorry, that message is too long.');

		message.channel.send(rendered, {
			code: 'md'
		});
	});
};

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: [],
  permLevel: 0
};

exports.help = {
  name: 'ascii',
  description: 'Makes a beautiful text of what you want.',
  usage: 'ascii <word>/<littletext>'
};

//avatar command (avatar.js file)
exports.run = (client, message) => {
	const Discord = require('discord.js');
	const settings = require('../settings.json');	
	if(message.content.startsWith(settings.prefix + 'avatar')) {
	let user = message.mentions.users.first() || message.author;

	let embed = new Discord.RichEmbed()
	.setAuthor(`${user.username}`)
	.setImage(user.displayAvatarURL)
	.setColor('RANDOM')
	.setThumbnail()

	message.channel.send(embed)
}};

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: [],
  permLevel: 0
};

exports.help = {
  name: 'avatar',
  description: 'Shows the avatar of the user.',
  usage: 'avatar [user]'
};

//ban command (ban.js file)
const {RichEmbed} = require('discord.js');
const {caseNumber} = require('../util/caseNumber.js');
const {parseUser} = require('../util/parseUser.js');
const settings = require('../settings.json');
exports.run = async (client, message, args) => {
  const user = message.mentions.users.first();
  parseUser(message, user);
  const modlog = client.channels.find('name', 'mod-log');
  const caseNum = await caseNumber(client, modlog);
  if (!modlog) return message.reply('I cannot find a mod-log channel');
  if (message.mentions.users.size < 1) return message.reply('You must mention someone to ban them.').catch(console.error);
  message.guild.ban(user, 2);

  const reason = args.splice(1, args.length).join(' ') || `Awaiting moderator's input. Use ${settings.prefix}reason ${caseNum} <reason>.`;
  const embed = new RichEmbed()
  .setColor(0x00AE86)
  .setTimestamp()
  .setDescription(`**Action:** Ban\n**Target:** ${user.tag}\n**Moderator:** ${message.author.tag}\n**Reason:** ${reason}`)
  .setFooter(`Case ${caseNum}`);
  return client.channels.get(modlog.id).send({embed});
};

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: [],
  permLevel: 2
};

exports.help = {
  name: 'ban',
  description: 'Bans the mentioned user.',
  usage: 'ban [mention] [reason]'
};

//bird command (bird.js file)
const Discord= require('discord.js');

exports.run = (client, message) => {
  var bird = [
    "https://media.giphy.com/media/W5YVAfSttCqre/giphy.gif",
    "https://media.giphy.com/media/8DMcPUczc3cze/giphy.gif",
    "https://media.giphy.com/media/MUHNdrm3vk7MoyUsCO/giphy.gif",
    "https://media.giphy.com/media/3RyVOV3yZeQo0/giphy.gif",
    "https://media.giphy.com/media/KFmOfbl5mrbK8/giphy.gif",
    "https://media.giphy.com/media/SQ1nUXwCpki4g/giphy.gif",
    "https://media.giphy.com/media/10jKq6FU0AOdHO/giphy.gif",
    "https://media.giphy.com/media/xB2nSaRWHqBhYsso6P/giphy.gif",
    "https://media.giphy.com/media/3o7WIKJzFh68P9iJI4/giphy.gif",
    "https://media.giphy.com/media/6U4v1NPgaonDi/giphy.gif",
    "https://media.giphy.com/media/dv7K4FEfgSm2Y/giphy.gif",
    "https://media.giphy.com/media/KY5itWvIINKs8/giphy.gif",
    "https://media.giphy.com/media/yoJC2Lswh5MVi3cs36/giphy.gif",
    "https://media.giphy.com/media/dtVP34IdVSD13Kn66t/giphy.gif",
    "https://media.giphy.com/media/wH8s0Ntwgh5YI/giphy.gif",
    "https://media.giphy.com/media/Yn33HO11fNRUk/giphy.gif",
    "https://media.giphy.com/media/26FPF032XnQCUsw4E/giphy.gif",
    "https://media.giphy.com/media/suETgaR3MbLjy/giphy.gif",
    "https://media.giphy.com/media/dA1f4RKry4lcA/giphy.gif",
    "https://media.giphy.com/media/m6dm34kEpM1gc/giphy.gif"
  ];

  var gif = bird[Math.floor(Math.random() * bird.length)];

  var embed = new Discord.RichEmbed()
    .setColor('RANDOM')
    .setTitle(':bird: Bird:')
    .setImage(gif)

    message.channel.send(embed)
}

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: [],
  permLevel: 0
};

exports.help = {
  name: 'bird',
  description: 'Shows a random bird gif.',
  usage: 'bird'
};

//botinfo command (bi.js file)
exports.run = async (client, message) => {
const settings = require('../settings.json');
const Discord = require('discord.js');
if(message.content.startsWith(settings.prefix + 'bi')){
let bicon = client.user.displayAvatarURL;
let clientembed = new Discord.RichEmbed()
.setAuthor(client.user.username, client.user.avatarURL)
.setDescription("client Informations")
.setColor("#15f153")
.setThumbnail(bicon)
.addField("client Name:", client.user.username)
.addField("client discriminator:", client.user.discriminator)
.addField("Created On:", client.user.createdAt)
.addField("Users Number:", client.users.size)
.addField("On:", `${client.guilds.size}servers.`)
.addField("Named:", client.guilds.map(r => r.name + ` | **${r.memberCount}** membres`))
.setTimestamp();

return message.channel.send(clientembed);
}
}

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: [],
  permLevel: 0
};

exports.help = {
  name: 'bi',
  description: 'Shows the client informations.',
  usage: 'bi'
};

//calc command (calc.js file)
const math = require('mathjs');
const Discord = require('discord.js');

exports.run = (client, message, args, tools) => {
	if(!args[0]) return message.channel.send('Please input a calculation.');
	let resp;
	try{
		resp = math.eval(args.join(' '));
	} catch(e) {
		return message.channel.send('Sorry, please input a valid calculation.')
	}

	const embed = new Discord.RichEmbed()
		.setColor(0xffffff)
		.setTitle('Math Calculation')
		.addField('Input', `\`\`\`${args.join(' ')}\`\`\``)
		.addField('Output', `\`\`\`js\n${resp}\`\`\``)
		
	message.channel.send(embed);
};

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: [],
  permLevel: 0
};

exports.help = {
  name: 'calc',
  description: 'Calcs the wanted calculation.',
  usage: 'calc <calculation>'
};

//cat command (cat.js file)
const Discord= require('discord.js');

exports.run = (client, message) => {
  var cat = [
    "https://media.giphy.com/media/JIX9t2j0ZTN9S/giphy.gif",
    "https://media.giphy.com/media/3oriO0OEd9QIDdllqo/giphy.gif",
    "https://media.giphy.com/media/nNxT5qXR02FOM/giphy.gif",
    "https://media.giphy.com/media/vFKqnCdLPNOKc/giphy.gif",
    "https://media.giphy.com/media/3oEduSbSGpGaRX2Vri/giphy.gif",
    "https://media.giphy.com/media/l0MYNB04rBb51QNtC/giphy.gif",
    "https://media.giphy.com/media/GFHJXPCoVQEec/giphy.gif",
    "https://media.giphy.com/media/TEkr9oBZ57KFmMWScZ/giphy.gif",
    "https://media.giphy.com/media/uTCAwWNtz7U2c/giphy.gif",
    "https://media.giphy.com/media/xBAreNGk5DapO/giphy.gif",
    "https://media.giphy.com/media/E0cyxhawhe9dm/giphy.gif",
    "https://media.giphy.com/media/G3773sSDJHHy0/giphy.gif",
    "https://media.giphy.com/media/tBxyh2hbwMiqc/giphy.gif",
    "https://media.giphy.com/media/t7MWRoExDRF72/giphy.gif",
    "https://media.giphy.com/media/l4KibK3JwaVo0CjDO/giphy.gif",
    "https://media.giphy.com/media/lN9amhr8GZMhG/giphy.gif",
    "https://media.giphy.com/media/xTiQygY6HW1GjoYKFq/giphy.gif",
    "https://media.giphy.com/media/X3Yj4XXXieKYM/giphy.gif",
    "https://media.giphy.com/media/3dpGaQxDQthaQDeWFF/giphy.gif",
    "https://media.giphy.com/media/8cErt0PCSgzOY375br/giphy.gif"
  ];

  var gif = cat[Math.floor(Math.random() * cat.length)];

  var embed = new Discord.RichEmbed()
    .setColor('RANDOM')
    .setTitle(':cat: Cat:')
    .setImage(gif)

    message.channel.send(embed)
}

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: [],
  permLevel: 0
};

exports.help = {
  name: 'cat',
  description: 'Shows a random cat gif.',
  usage: 'cat'
};

//dadjoke command (dadjoke.js file)
const Discord = require('discord.js');

var jokes = [
    "What time did the man go to the dentist? Tooth hurt-y",
    "I'm reading a book about anti-gravity. It's impossible to put down!",
    "Want to hear a joke about a piece of paper? Never mind... it's tearable.",
    "I just watched a documentary about beavers. It was the best dam show I ever saw!",
    "If you see a robbery at an Apple Store does that make you an iWitness?",
    "Spring is here! I got so excited I wet my plants!",
    "A ham sandwich walks into a bar and orders a beer. The bartender says, \"Sorry we don’t serve food here.\"",
    "What’s Forrest Gump’s password? 1forrest1",
    "I bought some shoes from a drug dealer. I don't know what he laced them with, but I was tripping all day!",
    "Why do chicken coops only have two doors? Because if they had four, they would be chicken sedans!",
    "What do you call a factory that sells passable products? A satisfactory.",
    "A termite walks into a bar and asks, \"Is the bar tender here?\"",
    "When a dad drives past a graveyard: Did you know that's a popular cemetery? Yep, people are just dying to get in there!",
    "Two peanuts were walking down the street. One was a salted.",
    "Why did the invisible man turn down the job offer? He couldn't see himself doing it.",
    "I used to have a job at a calendar factory but I got the sack because I took a couple of days off.",
    "How do you make holy water? You boil the hell out of it.",
    "A three-legged dog walks into a bar and says to the bartender, \"I’m looking for the man who shot my paw.\"",
    "When you ask a dad if he's alright: \"No, I’m half left.\"",
    "I had a dream that I was a muffler last night. I woke up exhausted!",
    "How do you tell the difference between a frog and a horny toad? A frog says, \"Ribbit, ribbit\" and a horny toad says, \"Rub it, rub it.\"",
    "Did you hear the news? FedEx and UPS are merging. They’re going to go by the name Fed-Up from now on.",
    "5/4 of people admit that they’re bad with fractions.",
    "MOM: \"How do I look?\" DAD: \"With your eyes.\"",
    "What is Beethoven’s favorite fruit? A ba-na-na-na.",
    "What did the horse say after it tripped? \"Help! I’ve fallen and I can’t giddyup!\”",
    "Did you hear about the circus fire? It was in tents!",
    "Don't trust atoms. They make up everything!",
    "What do you get when you cross an elephant with a rhino? Elephino.",
    "How many tickles does it take to make an octopus laugh? Ten-tickles.",
    "What's the best part about living in Switzerland? I don't know, but the flag is a big plus.",
    "What do prisoners use to call each other? Cell phones.",
    "Why couldn't the bike standup by itself? It was two tired.",
    "What do you call a dog that can do magic? A Labracadabrador.",
    "Why didn't the vampire attack Taylor Swift? She had bad blood.",
    "NURSE: \"Blood type?\" DAD: \"Red.\"",
    "SERVER: \"Sorry about your wait.\" DAD: \"Are you saying I’m fat?\”",
    "What do you call a fish with two knees? A “two-knee” fish.",
    "I was interrogated over the theft of a cheese toastie. Man, they really grilled me.",
    "What do you get when you cross a snowman with a vampire? Frostbite.",
    "Can February March? No, but April May!",
    "When you ask a dad if they got a haircut: \"No, I got them all cut!\"",
    "What does a zombie vegetarian eat? “GRRRAAAAAIIIINNNNS!”",
    "What does an angry pepper do? It gets jalapeño your face.",
    "Why wasn't the woman happy with the velcro she bought? It was a total ripoff.",
    "What did the buffalo say to his son when he dropped him off at school? Bison.",
    "What do you call someone with no body and no nose? Nobody knows.",
    "Where did the college-aged vampire like to shop? Forever 21.",
    "You heard of that new band 1023MB? They're good but they haven't got a gig yet.",
    "Why did the crab never share? Because he's shellfish."
];

exports.run = async (bot, message, args) => {

      var DAD = new Discord.RichEmbed()
      .setDescription(jokes[Math.floor(Math.random() * jokes.length)])

      .setColor("0x#FF0000")

      message.channel.send(DAD);
};

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: [],
  permLevel: 0
};

exports.help = {
  name: 'dadjoke',
  description: 'Makes a dad joke.',
  usage: 'dadjoke'
};

//dog command (dog.js file)
const Discord= require('discord.js');

exports.run = (client, message) => {
  var dog = [
    "https://media.giphy.com/media/26FPqut4lzK3AECEo/giphy.gif",
    "https://media.giphy.com/media/Bc3SkXz1M9mjS/giphy.gif",
    "https://media.giphy.com/media/Qt7ZKXj42izpm/giphy.gif",
    "https://media.giphy.com/media/3o8doVAxrMjXbIHaU0/giphy.gif",
    "https://media.giphy.com/media/3oKIPd8EtLUiCYHbry/giphy.gif",
    "https://media.giphy.com/media/3boPPdHk2ueo8/giphy.gif",
    "https://media.giphy.com/media/naXyAp2VYMR4k/giphy.gif",
    "https://media.giphy.com/media/Wi8O8WBtYX7dS/giphy.gif",
    "https://media.giphy.com/media/BpDYodBlBXFIs/giphy.gif",
    "https://media.giphy.com/media/11tLJ4XVXqWHSg/giphy.gif",
    "https://media.giphy.com/media/5xtDarEXlXBmnOuTh0k/giphy.gif",
    "https://media.giphy.com/media/2PMCdlOcYh4Os/giphy.gif",
    "https://media.giphy.com/media/9IRX12VhoXoR2/giphy.gif",
    "https://media.giphy.com/media/NmGbJwLl7Y4lG/giphy.gif",
    "https://media.giphy.com/media/pjzbionhFdccw/giphy.gif",
    "https://media.giphy.com/media/pcwaLYOQb3xN6/giphy.gif",
    "https://media.giphy.com/media/3ornjU8Cd8FW1nhG6s/giphy.gif",
    "https://media.giphy.com/media/rBYc4tkIeLCNy/giphy.gif",
    "https://media.giphy.com/media/QGSEGsTr04bPW/giphy.gif",
    "https://media.giphy.com/media/yJHN2CCfPIw4o/giphy.gif"
  ];

  var gif = dog[Math.floor(Math.random() * dog.length)];

  var embed = new Discord.RichEmbed()
    .setColor('RANDOM')
    .setTitle(':dog: Dog:')
    .setImage(gif)

    message.channel.send(embed)
}

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: [],
  permLevel: 0
};

exports.help = {
  name: 'dog',
  description: 'Shows a random dog gif.',
  usage: 'dog'
};

//hackban command (hackban.js file)
exports.run = (client, message, args) => {
    if (!args[0]) return message.reply("Ban a user by their ID. Use for people who are not currently in your server.");
    message.guild.ban(args[0]).then(() => {
        message.channel.send("Banning the ID `"+message.args[0]+"`")
    }).catch(err => {
        message.channel.send("The ID `"+args[0]+"` is not a valid user.");
    })
};

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: [],
  permLevel: 2
};

exports.help = {
  name: 'hackban',
  description: 'Ban a user by their ID, even if they haven\'t joined your server.',
  usage: 'hackban <id>'
};

//help command (help.js file)
const settings = require('../settings.json');
exports.run = (client, message, params) => {
  if (!params[0]) {
    const commandNames = Array.from(client.commands.keys());
    const longest = commandNames.reduce((long, str) => Math.max(long, str.length), 0);
    message.channel.send(`= Command List =\n\n[Use ${settings.prefix}help <commandname> for details]\n\n${client.commands.map(c => `${settings.prefix}${c.help.name}${' '.repeat(longest - c.help.name.length)} :: ${c.help.description}`).join('\n')}`, {code:'asciidoc'});
  } else {
    let command = params[0];
    if (client.commands.has(command)) {
      command = client.commands.get(command);
      message.channel.send(`= ${command.help.name} = \n${command.help.description}\nusage::${command.help.usage}`, {code:'asciidoc'});
    }
  }
};

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ['h', 'halp'],
  permLevel: 0
};

exports.help = {
  name: 'help',
  description: 'Displays all the available commands for your permission level.',
  usage: 'help [command]'
};

//highlight command (highlight.js file)
module.exports.run = async (bot, message, args) => {

//console.log(args[0]);// user
//console.log(args[1]);// role
//console.log(args[2]);//time

message.delete();

if(!args.join(" ")){
  return message.channel.send(":x: " + "| Please Enter Something For The Bot To Highligh With Syntax")
}
message.channel.send("```" + args.join(" ") + "```");
};

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: [],
  permLevel: 0
};

exports.help = {
  name: 'highlight',
  description: 'Highlights your text.',
  usage: 'highlight'
};

//hug command (hug.js file)
const Discord= require('discord.js');

exports.run = (client, message) => {
  var hug = [
    "https://media.giphy.com/media/xT39CXg70nNS0MFNLy/giphy.gif",
    "https://media.giphy.com/media/3oEdv4hwWTzBhWvaU0/giphy.gif",
    "https://media.giphy.com/media/diAhf8bYer76E/giphy.gif",
    "https://media.giphy.com/media/l4FGpP4lxGGgK5CBW/giphy.gif",
    "https://media.giphy.com/media/8tpiC1JAYVMFq/giphy.gif",
    "https://media.giphy.com/media/VGACXbkf0AeGs/giphy.gif",
    "https://media.giphy.com/media/a5vmVcRPc63qU/giphy.gif",
    "https://media.giphy.com/media/WQ9l85vIyhRV6/giphy.gif",
    "https://media.giphy.com/media/13YrHUvPzUUmkM/giphy.gif",
    "https://media.giphy.com/media/Ilkurs1e3hP0c/giphy.gif",
    "https://media.giphy.com/media/Dvw0dmXuLqgaQ/giphy.gif",
    "https://media.giphy.com/media/C4gbG94zAjyYE/giphy.gif",
    "https://media.giphy.com/media/BXrwTdoho6hkQ/giphy.gif",
    "https://media.giphy.com/media/u9BxQbM5bxvwY/giphy.gif",
    "https://media.giphy.com/media/TVdrnuLettKCI/giphy.gif",
    "https://media.giphy.com/media/f0QCDoLAuOpNK/giphy.gif",
    "https://media.giphy.com/media/IRUb7GTCaPU8E/giphy.gif",
    "https://media.giphy.com/media/GXFDStd2CP1ba/giphy.gif",
    "https://media.giphy.com/media/3EJsCqoEiq6n6/giphy.gif",
    "https://media.giphy.com/media/mmPgxbuPiwCQg/giphy.gif"
  ];

  var gif = hug[Math.floor(Math.random() * hug.length)];
  let user = message.mentions.users.first();

  var embed = new Discord.RichEmbed()
    .setColor('RANDOM')
    .setTitle(`${message.author.username} hug ${user.username}`)
    .setImage(gif)

    message.channel.send(embed)
}

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: [],
  permLevel: 0
};

exports.help = {
  name: 'hug',
  description: 'Big huuuggg.',
  usage: 'hug'
};

//invite command (invite.js file)
exports.run = (client, message) => {
	message.channel.send('Here is my invite, My creator will be happy to know you invite me :heart: => urbotinvitelink')
}

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: [],
  permLevel: 0
};

exports.help = {
  name: 'invite',
  description: 'Sends the bot invitation.',
  usage: 'invite'
};

//invites command (invites.js file)
const Discord = require('discord.js'),
	  arraySort = require('array-sort')
	  table = require('table')

exports.run = async (client, message, args, tools) => {
	let invites = await message.guild.fetchInvites()
	
	invites = invites.array();

	arraySort(invites, 'uses', { reverse: true});

	let possibleInvites = [['User', 'Uses']];
	invites.forEach(function(invite) {
		possibleInvites.push([invite.inviter.username, invite.uses]);
	})

	const embed = new Discord.RichEmbed()
		.setColor(0x7289)
		.setTitle('Server Invites')
		.addField('Leaderboard', `\`\`\`${table.table(possibleInvites)}\`\`\``)

	message.channel.send(embed)
};

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: [],
  permLevel: 2
};

exports.help = {
  name: 'invites',
  description: 'Bans the invite leaderboard.',
  usage: 'invites [user]'
};

//kick command (kick.js file)
const {RichEmbed} = require('discord.js');
const {caseNumber} = require('../util/caseNumber.js');
const {parseUser} = require('../util/parseUser.js');
const settings = require('../settings.json');
exports.run = async (client, message, args) => {
  const user = message.mentions.users.first();
  parseUser(message, user);
  const modlog = client.channels.find('name', 'mod-log');
  const caseNum = await caseNumber(client, modlog);
  if (!modlog) return message.reply('I cannot find a mod-log channel');
  if (message.mentions.users.size < 1) return message.reply('You must mention someone to kick them.').catch(console.error);

  message.guild.member(user).kick();

  const reason = args.splice(1, args.length).join(' ') || `Awaiting moderator's input. Use ${settings.prefix}reason ${caseNum} <reason>.`;
  const embed = new RichEmbed()
  .setColor(0x00AE86)
  .setTimestamp()
  .setDescription(`**Action:** Kick\n**Target:** ${user.tag}\n**Moderator:** ${message.author.tag}\n**Reason:** ${reason}`)
  .setFooter(`Case ${caseNum}`);
  return client.channels.get(modlog.id).send({embed});
};

exports.conf = {
  aliases: [],
  permLevel: 2
};

exports.help = {
  name: 'kick',
  description: 'Kicks the mentioned user.',
  usage: 'kick [mention] [reason]'
};

//kiss command (kiss.js file)
const Discord= require('discord.js');

exports.run = (client, message) => {
  var kiss = [
    "https://media.giphy.com/media/QGc8RgRvMonFm/giphy.gif",
    "https://media.giphy.com/media/Y9iiZdUaNRF2U/giphy.gif",
    "https://media.giphy.com/media/EVODaJHSXZGta/giphy.gif",
    "https://media.giphy.com/media/R5GXPueAsMxdm/giphy.gif",
    "https://media.giphy.com/media/MQVpBqASxSlFu/giphy.gif",
    "https://media.giphy.com/media/11opH8Vfmy9d60/giphy.gif",
    "https://media.giphy.com/media/8z9nKUKfnlgGI/giphy.gif",
    "https://media.giphy.com/media/AxE9oZseGuvW8/giphy.gif",
    "https://media.giphy.com/media/tyttpHeJMYpYCAdkxhK/giphy.gif",
    "https://media.giphy.com/media/kjPs0uwHuc5wc/giphy.gif",
    "https://media.giphy.com/media/jv2NrCzvwqPh6/giphy.gif",
    "https://media.giphy.com/media/uSHX6qYv1M7pC/giphy.gif",
    "https://media.giphy.com/media/yI4cZhzOIW880/giphy.gif",
    "https://media.giphy.com/media/cUemi8qSpUSeQ/giphy.gif",
    "https://media.giphy.com/media/c63AaocmyrAsw/giphy.gif",
    "https://media.giphy.com/media/XtZH57iPrQRHi/giphy.gif",
    "https://media.giphy.com/media/fOMh4kdLJKuAg/giphy.gif",
    "https://media.giphy.com/media/bXq0jwLRIoV8c/giphy.gif",
    "https://media.giphy.com/media/ADH2n9nooVt2o/giphy.gif",
    "https://media.giphy.com/media/l378hoFF62BmYIrba/giphy.gif"
  ];

  var gif = kiss[Math.floor(Math.random() * kiss.length)];
  let user = message.mentions.users.first();

  var embed = new Discord.RichEmbed()
    .setColor('RANDOM')
    .setTitle(`${message.author.username} kiss ${user.username}`)
    .setImage(gif)

    message.channel.send(embed)
}

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: [],
  permLevel: 0
};

exports.help = {
  name: 'kiss',
  description: 'Love kiss.',
  usage: 'kiss'
};

lockdown command(lockdown.js file)
const ms = require('ms');
exports.run = (client, message, args) => {
  if (!client.lockit) client.lockit = [];
  const time = args.join(' ');
  const validUnlocks = ['release', 'unlock'];
  if (!time) return message.reply('You must set a duration for the lockdown in either hours, minutes or seconds');

  if (validUnlocks.includes(time)) {
    message.channel.overwritePermissions(message.guild.id, {
      SEND_MESSAGES: null
    }).then(() => {
      message.channel.send('Lockdown lifted.');
      clearTimeout(client.lockit[message.channel.id]);
      delete client.lockit[message.channel.id];
    }).catch(error => {
      console.log(error);
    });
  } else {
    message.channel.overwritePermissions(message.guild.id, {
      SEND_MESSAGES: false
    }).then(() => {
      message.channel.send(`Channel locked down for ${ms(ms(time), { long:true })}`).then(() => {

        client.lockit[message.channel.id] = setTimeout(() => {
          message.channel.overwritePermissions(message.guild.id, {
            SEND_MESSAGES: null
          }).then(message.channel.send('Lockdown lifted.')).catch(console.error);
          delete client.lockit[message.channel.id];
        }, ms(time));

      }).catch(error => {
        console.log(error);
      });
    });
  }
};
exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ['ld'],
  permLevel: 2
};

exports.help = {
  name: 'lockdown',
  description: 'This will lock a channel down for the set duration, be it in hours, minutes or seconds.',
  usage: 'lockdown <duration>'
};

membercount command (membercount.js file)
exports.run = (client, message) => {
	message.channel.send(`We are exactly ${message.guild.memberCount} members in the server.`)
};

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: [],
  permLevel: 0
};

exports.help = {
  name: 'membercount',
  description: 'Shows how many members are in the server.',
  usage: 'membercount'
};

//mute command (mute.js file)
const {RichEmbed} = require('discord.js');
const {caseNumber} = require('../util/caseNumber.js');
const {parseUser} = require('../util/parseUser.js');
const settings = require('../settings.json');
exports.run = async (client, message, args) => {
  const user = message.mentions.users.first();
  parseUser(message, user);
  const modlog = client.channels.find('name', 'mod-log');
  const caseNum = await caseNumber(client, modlog);
  const muteRole = client.guilds.get(message.guild.id).roles.find('name', 'muted');
  if (!modlog) return message.reply('I cannot find a mod-log channel').catch(console.error);
  if (!muteRole) return message.reply('I cannot find a mute role').catch(console.error);
  if (message.mentions.users.size < 1) return message.reply('You must mention someone to mute them.').catch(console.error);
  const reason = args.splice(1, args.length).join(' ') || `Awaiting moderator's input. Use ${settings.prefix}reason ${caseNum} <reason>.`;

  const embed = new RichEmbed()
    .setColor(0x00AE86)
    .setTimestamp()
    .setDescription(`**Action:** Un/mute\n**Target:** ${user.tag}\n**Moderator:** ${message.author.tag}\n**Reason:** ${reason}`)
    .setFooter(`Case ${caseNum}`);

  if (!message.guild.member(client.user).hasPermission('MANAGE_ROLES_OR_PERMISSIONS')) return message.reply('I do not have the correct permissions.').catch(console.error);

  if (message.guild.member(user).roles.has(muteRole.id)) {
    message.guild.member(user).removeRole(muteRole).then(() => {
      client.channels.get(modlog.id).send({embed}).catch(console.error);
    });
  } else {
    message.guild.member(user).addRole(muteRole).then(() => {
      client.channels.get(modlog.id).send({embed}).catch(console.error);
    });
  }

};

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: ['unmute'],
  permLevel: 2
};

exports.help = {
  name: 'mute',
  description: 'mutes or unmutes a mentioned user',
  usage: 'un/mute [mention] [reason]'
};

//ping command (ping.js file)
exports.run = (client, message) => {
  message.channel.send('Ping?')
    .then(msg => {
      msg.edit(`Pong! (took: ${msg.createdTimestamp - message.createdTimestamp}ms)`);
    });
};

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: [],
  permLevel: 0
};

exports.help = {
  name: 'ping',
  description: 'Ping/Pong command. I wonder what this does? /sarcasm',
  usage: 'ping'
};

//purge command (purge.js file)
exports.run = (client, message, args) => {
  const messagecount = parseInt(args.join(' '));
  message.channel.fetchMessages({
    limit: messagecount
  }).then(messages => message.channel.bulkDelete(messages));
};

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: [],
  permLevel: 2
};

exports.help = {
  name: 'purge',
  description: 'Purges X amount of messages from a given channel.',
  usage: 'purge <number>'
};

//reason command (reason.js file)
const settings = require('../settings.json');

async function embedSan(embed) {
  embed.message ? delete embed.message : null;
  embed.footer ? delete embed.footer.embed : null;
  embed.provider ? delete embed.provider.embed : null;
  embed.thumbnail ? delete embed.thumbnail.embed : null;
  embed.image ? delete embed.image.embed : null;
  embed.author ? delete embed.author.embed : null;
  embed.fields ? embed.fields.forEach(f => {delete f.embed;}) : null;
  return embed;
}

exports.run = async (client, message, args) => {
  const modlog = client.channels.find('name', 'mod-log');
  const caseNumber = args.shift();
  const newReason = args.join(' ');

  await modlog.fetchMessages({limit:100}).then((messages) => {
    const caseLog = messages.filter(m => m.author.id === client.user.id &&
      m.embeds[0] &&
      m.embeds[0].type === 'rich' &&
      m.embeds[0].footer &&
      m.embeds[0].footer.text.startsWith('Case') &&
      m.embeds[0].footer.text === `Case ${caseNumber}`
    ).first();
    modlog.fetchMessage(caseLog.id).then(logMsg => {
      const embed = logMsg.embeds[0];
      embedSan(embed);
      embed.description = embed.description.replace(`Awaiting moderator's input. Use ${settings.prefix}reason ${caseNumber} <reason>.`, newReason);
      logMsg.edit({embed});
    });
  });
};

exports.conf = {
  aliases: [],
  permLevel: 2
};

exports.help = {
  name: 'reason',
  description: 'Updates an unset moderator action.',
  usage: 'reason <case number> <new reason>'
};

//removerole command (removerole.js file)
const Discord = module.require('discord.js');

exports.run = async (bot, message, args) => {

if(message.member.hasPermission("ADMINISTRATOR")) {
  let member3 = message.mentions.members.first();
  if(!member3) return message.reply(":x: " + "| You need to mention a user/member!");

  let muteRole3 = message.mentions.roles.first();
  if(!muteRole3) return message.reply(":x: " + `| There is no such thing as a \"${muteRole3.name}\" role!`);

  member3.removeRole(muteRole3.id);
  message.channel.send(member3 + ` you have lost the role: ` + muteRole3.name + `!`);

  }else {
    return message.reply(":x: " + "| You need to have the \"ADMINISTRATOR\" Permission")
  };
};

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: [],
  permLevel: 2
};

exports.help = {
  name: 'removerole',
  description: 'Removes the wanted role of a user.',
  usage: 'removerole <role> <user>'
};

//roll command (roll.js file)
exports.run = (client, message, sides) => {
    if (sides.length < 1) { sides = 6; }
    if (sides === 0) { return message.channel.send("You can't roll from 0!"); }

    if (Number.isInteger(Number(sides))) { 
        var y = Math.floor(Math.random() * (Math.floor(sides) - Math.ceil(1) + 1)) + Math.ceil(1);
        return message.channel.send(`🎲 You rolled a ${y}! 🎲`);
    } else {
        return message.channel.send("It seems you added some letters into your number. Please try again!");
    }    
 };

exports.conf = {
    enabled: true,
    runIn: ["text"],
    aliases: [],
    permLevel: 0,
    botPerms: [],
};
  
exports.help = {
    name: "roll",
    description: "Roll a dice!",
    usage: "[sides:str]",
    usageDelim: "roll",
};

//rules command (rules.js file)
const Discord = module.require('discord.js');

var rules1 = new Discord.RichEmbed()
        .addField("Rules (1/2):", "---------------------------------------------------------------------------------------\n" +
                                  "__**1.**__ No spamming or flooding the chat with messages, symbols or pictures etc. \n" +
                                  "__**2.**__ Do not type in all Caps, Bold, Italic or other formats unless you're a  Admin. \n" +
                                  "__**3.**__ adult (18+), explicit images etc, go to the NSFW channel \n" +
                                  "__**4.**__ No racist or degrading content.\n" +
                                  "__**5.**__ No excessively cursing. \n" +
                                  "__**6.**__ No advertising other sites/discord servers without permission. \n" +
                                  "__**7.**__ No posting external links other than direct links to youtube\n", true)

        .setColor("0xFF0000")

var rules2 = new Discord.RichEmbed()
        .addField("Rules (2/2):", "__**8.**__ No using peoples usernames and/or posing as them. \n" +
                                  "__**9.**__ No begging or repeatedly asking for permissions in the chat. \n" +
                                  "__**10.**__. No offensive names or names which contain swear words. \n" +
                                  "__**11.**__ Do not argue with staff there decisions are final. \n" +
                                  "__**12.**__ Do not repeatedly message Moderators or Admins without permission \n" +
                                  "__**13.**__ Do not message people, Moderators or Admins with \"Stupid\" questions \n" +
                                  "---------------------------------------------------------------------------------------\n", true)

        .setColor("0xFF0000")

module.exports.run = async (bot, message, args) => {

//console.log(args[0]);// user
//console.log(args[1]);// role
//console.log(args[2]);//time


            message.channel.send(rules1)
            message.channel.send(rules2)

              .then(function (message) {
                message.react("Bin2:362263530424107009")
              })

};

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: [],
  permLevel: 0
};

exports.help = {
  name: 'rules',
  description: 'Shows some rules for the server.',
  usage: 'rules'
};

//serverinfo command (serverinfo.js command)
exports.run = async (client, message) => {
const settings = require('../settings.json');
const Discord = require('discord.js');
if(message.content.startsWith(settings.prefix + 'si')) {
let emojis;
        if (message.guild.emojis.size === 0) emojis = 'No emotes in this server.';
        else emojis = `**Emojis for ${message.guild.name}**\n${message.guild.emojis.map(e => e).join(' ')}`;
let sicon = message.guild.iconURL;
let serverembed = new Discord.RichEmbed()
.setDescription("Server Informations")
.setColor("#15f153")
.setThumbnail(sicon)
.addField("Server Name:", message.guild.name)
.addField("Server Owner:", message.guild.owner.user.tag)
.addField("Created On:", message.guild.createdAt)
.addField("You Joined:", message.member.joinedAt)
.addField("Total Members:", message.guild.memberCount)
.addField("Human:", message.guild.members.filter(member => !member.user.bot).size)
.addField("Bot:", message.guild.members.filter(member => member.user.bot).size)
.addField("Online:", 
`${message.guild.members.filter(m => m.presence.status === 'online').size}`)
.addField("Online Humans:", `${message.guild.members.filter(m => m.presence.status === 'online').filter(member => !member.user.bot).size}`)
.addField("Idle Humans:", `${message.guild.members.filter(m => m.presence.status === 'idle').filter(member => !member.user.bot).size}`)
.addField("Dnd Humans:", `${message.guild.members.filter(m => m.presence.status === 'dnd').filter(member => !member.user.bot).size}`)
.addField("Online Bots:", `${message.guild.members.filter(m => m.presence.status === 'online').filter(member => member.user.bot).size}`)
.addField("Idle Bots:", `${message.guild.members.filter(m => m.presence.status === 'idle').filter(member => member.user.bot).size}`)
.addField("Dnd Bots:", `${message.guild.members.filter(m => m.presence.status === 'dnd').filter(member => member.user.bot).size}`)
.addField("Offline:", 
`${message.guild.members.filter(m => m.presence.status === 'offline').size}`)
.addField("Offline Humans:", `${message.guild.members.filter(m => m.presence.status === 'offline').filter(member => !member.user.bot).size}`)
.addField("Offline Bots:", `${message.guild.members.filter(m => m.presence.status === 'offline').filter(member => member.user.bot).size}`)
.addField("Number of Channels:", message.guild.channels.size)
.addField("Number of Roles:", message.guild.roles.size)
.addField("Server Emotes:", emojis)
.setTimestamp();

return message.channel.send(serverembed);
}
}

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: [],
  permLevel: 0
};

exports.help = {
  name: 'si',
  description: 'Shows the server informations.',
  usage: 'si'
};

//uname command (uname.js file)
exports.run = (client, message, args) => {
  if (!args[0]) {
     message.channel.send("**Please provide a new nickname.**")
     return;
    }
    if (message.author.id === message.guild.owner.id) {
     message.channel.send("**Unfortunately I cannot change the owners nickname.**")
     return;
    }
    if (message.member.highestRole.position < message.guild.member(bot.user).highestRole.position) {
     message.member.setNickname(message.suffix);
     message.channel.send("**Your nickname is now:** " + message.suffix)
    } else {
     message.channel.send("**Infortunately I cannot change your nickname because your role is higher than mine.**")
    }
};

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: [],
  permLevel: 0
};

exports.help = {
  name: 'uname',
  description: 'Change *your* nickname using emojis and other special characters',
  usage: 'uname <username>'
};

//urban command (urban.js file)
const urban = require('relevant-urban');
const Discord = require('discord.js');
exports.run = async (client, message, args, tools) => {
	if(!args[0]) return message.channel.send('***Please specify some text.***');

	let res = await urban(args.join(' ')).catch(e => {
	return message.channel.send('***Sorry, that word was not found.***');
	});

	const embed = new Discord.RichEmbed()
		.setColor('RANDOM')
		.setTitle(res.word)
		.setURL(res.urbanURL)
		.setDescription(`**Definition:**\n*${res.definition}*\n\n**Example:**\n*${res.example}*`)
		.addField('Author', res.author, true)
		.addField('Rating', `**\`Upvotes: ${res.thumbsUp} | Downvotes: ${res.thumbsDown}\`**`)

	if(res.tags.length > 0 && res.tags.join(', ').length < 1024) {
	embed.addField('Tags', res.tags.join(', '), true)
	}

	message.channel.send(embed);
	};

	exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: [],
  permLevel: 0
};

exports.help = {
  name: 'urban',
  description: 'Shows the definition of the urban dictionnary.',
  usage: 'urban <word>'
};

//userinfo command (userinfo.js file)
exports.run = async (client, message) => {
const settings = require('../settings.json');
const Discord = require('discord.js');
if(message.content.startsWith(settings.prefix + 'ui')){
let user = message.mentions.users.first() || message.author;
let member = message.mentions.members.first() || message.member;
let user_embed = new Discord.RichEmbed()
.setAuthor(`${member.user.username} Info`, member.user.displayAvatarURL)
.setThumbnail(member.user.displayAvatarURL)
.setColor('RANDOM')
.addField('ID', member.user.id, true)
.addField('Username', `${member.user.username}`, true)
.addField('Discriminator', `${user.discriminator}`, true)
.addField('Status', member.user.presence.status, true)
.addField('Game', `${user.presence.game ? user.presence.game.name : 'none'}` , true)
.addField('Roles', member.roles.map(roles => `${roles.name}`).join(', '), true)
.addField('Bot?', member.user.bot, true)
.setThumbnail()
message.channel.send(user_embed)
}
}

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: [],
  permLevel: 0
};

exports.help = {
  name: 'ui',
  description: 'Shows the user informations.',
  usage: 'ui [user]'
};

//vote command (vote.js file)
const Discord  = module.require('discord.js');

const agree    = "✅";
const disagree = "❎";

module.exports.run = async (bot, message, args) => {

  let msg = await message.channel.send("Vote now! (10 Seconds)");
  await msg.react(agree);
  await msg.react(disagree);

  const reactions = await msg.awaitReactions(reaction => reaction.emoji.name === agree || reaction.emoji.name === disagree, {time: 10000});
  msg.delete();

  var NO_Count = reactions.get(disagree).count;
  var YES_Count = reactions.get(agree);

  if(YES_Count == undefined){
    var YES_Count = 1;
  }else{
    var YES_Count = reactions.get(agree).count;
  }

  var sumsum = new Discord.RichEmbed()
  
            .addField("Voting Finished:", "----------------------------------------\n" +
                                          "Total votes (NO): " + `${NO_Count-1}\n` +
                                          "Total votes (Yes): " + `${YES_Count-1}\n` +
                                          "----------------------------------------", true)

            .setColor("0x#FF0000")

  await message.channel.send({embed: sumsum});

};

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: [],
  permLevel: 0
};

exports.help = {
  name: 'vote',
  description: 'Makes a vote for the server.',
  usage: 'vote <question>'
};

//votekick command (votekick.js file)
const Discord  = module.require('discord.js');

const agree    = "✅";
const disagree = "❎";

module.exports.run = async (bot, message, args) => {

  if (message.mentions.users.size === 0){
    return message.reply(":x: " + "| Please Mention A User To Kick Next Time");
  }

  let kickmember = message.guild.member(message.mentions.users.first());
  if(!kickmember){
    message.reply(":x: " + "| That User Does Not Seem Valid!");
  }

  if(!message.guild.member(bot.user).hasPermission("KICK_MEMBERS")){
    return message.reply(":x: " + "| i need the \"KICK_MEMBERS\" permission!").catch(console.error);
  }

  let msg = await message.channel.send("Vote now! (10 Seconds)");
  await msg.react(agree);
  await msg.react(disagree);

  const reactions = await msg.awaitReactions(reaction => reaction.emoji.name === agree || reaction.emoji.name === disagree, {time: 10000});
  msg.delete();

  var NO_Count = reactions.get(disagree).count;
  var YES_Count = reactions.get(agree);

  if(YES_Count == undefined){
    var YES_Count = 1;
  }else{
    var YES_Count = reactions.get(agree).count;
  }

  var sumsum = new Discord.RichEmbed()
  
            .addField("Voting Finished:", "----------------------------------------\n" +
                                          "Total votes (NO): " + `${NO_Count-1}\n` +
                                          "Total votes (Yes): " + `${YES_Count-1}\n` +
                                          "----------------------------------------\n" +
                                          "NOTE: Votes needed to kick (3+)\n" +
                                          "----------------------------------------", true)

            .setColor("0x#FF0000")

  await message.channel.send({embed: sumsum});

  if(YES_Count >= 4 && YES_Count > NO_Count){

    kickmember.kick().then(member => {
      message.reply(`${member.user.username} was succesfully kicked`)
    })
  }else{

    message.channel.send("\n" + "SAFE..... FOR NOW");
  }

};

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: [],
  permLevel: 0
};

exports.help = {
  name: 'votekick',
  description: 'Makes a vote to know if user have to be kick.',
  usage: 'votekick <user>'
};

//warn command (warn.js file)
const {RichEmbed} = require('discord.js');
const {caseNumber} = require('../util/caseNumber.js');
const {parseUser} = require('../util/parseUser.js');
const settings = require('../settings.json');
exports.run = async (client, message, args) => {
  const user = message.mentions.users.first();
  parseUser(message, user);
  const modlog = client.channels.find('name', 'mod-log');
  const caseNum = await caseNumber(client, modlog);
  if (!modlog) return message.reply('I cannot find a mod-log channel');
  if (message.mentions.users.size < 1) return message.reply('You must mention someone to warn them.').catch(console.error);

  const reason = args.splice(1, args.length).join(' ') || `Awaiting moderator's input. Use ${settings.prefix}reason ${caseNum} <reason>.`;
  const embed = new RichEmbed()
  .setColor(0x00AE86)
  .setTimestamp()
  .setDescription(`**Action:** Warning\n**Target:** ${user.tag}\n**Moderator:** ${message.author.tag}\n**Reason:** ${reason}`)
  .setFooter(`Case ${caseNum}`);
  return client.channels.get(modlog.id).send({embed});
};

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: [],
  permLevel: 2
};

exports.help = {
  name: 'warn',
  description: 'Issues a warning to the mentioned user.',
  usage: 'warn [mention] [reason]'
};

//weather command (weather.js file)
exports.run = async (client, message, args) => {
const settings = require('../settings.json');
const Discord = require('discord.js');
const weather = require('weather-js');
if(message.content.startsWith(settings.prefix + 'weather')){
weather.find({search: args.join(" "), degreeType: 'C'}, function(err, result){
if(err) message.channel.send(err);

var current = result[0].current;
var location = result[0].location;

const embed = new Discord.RichEmbed()
.setDescription(`**${current.skytext}**`)
.setAuthor(`Weather for ${current.observationpoint}`)
.setThumbnail(current.imageUrl)
.setColor(0x00AE86)
.addField('Timezone', `UTC${location.timezone}`, true)
.addField('Degree Type', location.degreetype, true)
.addField('Temperature', `${current.temperature} Degrees`, true)
.addField('Feels Like', `${current.feelslike} Degrees`, true)
.addField('Winds', current.winddisplay, true)
.addField('Humidity', `${current.humidity}%`, true)

message.channel.send({embed});
})
}
}

exports.conf = {
  enabled: true,
  guildOnly: false,
  aliases: [],
  permLevel: 0
};

exports.help = {
  name: 'weather',
  description: 'Shows the weather of the wanted place.',
  usage: 'weather <place>'
};
